--Made by $ layla#0001 & Ghxst#1317

local Services = setmetatable({}, {__index = function(Self, Index)
    local NewService = game.GetService(game, Index)
    if NewService then
    Self[Index] = NewService
    end
    return NewService
    end})
    
    -- [ Modules ] --
    local UserInterface = loadstring(game:HttpGet("https://raw.githubusercontent.com/michaelfinn69/LunaX-SilentAim/main/UserInterface", true))()
    local Drawing = loadstring(game:HttpGet("https://raw.githubusercontent.com/michaelfinn69/LunaX-SilentAim/main/drawingapi", true))()
    
    local ToolTip = require(Services.ReplicatedStorage.Modules_client.TooltipModule)
    
    -- [ LocalPlayer ] --
    local LocalPlayer = Services.Players.LocalPlayer
    local Camera = workspace.CurrentCamera
    
    -- [ Raycast Parameters ] --
    local RaycastParameters = RaycastParams.new()
    RaycastParameters.IgnoreWater = true
    RaycastParameters.FilterType = Enum.RaycastFilterType.Blacklist
    RaycastParameters.FilterDescendantsInstances = {LocalPlayer.Character}
    
    -- // Variables \\ --
    -- [ Info ] --
    local Info = {
       SilentAIMEnabled = false;
       TriggeredEnabled = false;
       ArmsCheckEnabled = true;
       TeamWhitelist = "";
       FieldOfView = 250;
    }
    
    local LastArrest = time()
    
    -- [ Interface ] --
    local FOVCircle = Drawing.new("Circle", {
       Thickness = 2.5,
       Color = Color3.fromRGB(200, 200, 200),
       NumSides = 25,
       Radius = _G.FOV
    })
    
    local Target = Drawing.new("Triangle", {
       Thickness = 5,
       Color = Color3.fromRGB(0, 200, 255)
    })
    
    -- [ Weapons ] --
    local Weapons = {
       "Remington 870";
       "AK-47";
       "M9";
       "M4A1";
       "Hammer";
       "Crude Knife";
    }
    
    -- [ Metatable ] --
    local RawMetatable = getrawmetatable(game)
    local __NameCall = RawMetatable.__namecall
    local __Index = RawMetatable.__index
    
    
    -- // Functions \\ --
    local function ValidCharacter(Character)
       return Character and (Character.FindFirstChildWhichIsA(Character, "Humanoid") and Character.FindFirstChildWhichIsA(Character, "Humanoid").Health ~= 0) or false
    end
    
    local function NotObstructing(Destination, Ancestor)
       -- [ Camera ] --
       local ObstructingParts = Camera.GetPartsObscuringTarget(Camera, {Destination}, {Ancestor, LocalPlayer.Character})
    
       for i,v in ipairs(ObstructingParts) do
           pcall(function()
               if v.Transparency >= 1 then
                   table.remove(ObstructingParts, i)
               end
           end)
       end
    
       if #ObstructingParts <= 0 then
           return true
       end
    
       -- [ Raycast ] --
       RaycastParameters.FilterDescendantsInstances = {LocalPlayer.Character}
    
       local Origin = Camera.CFrame.Position
       local Direction = (Destination - Origin).Unit * 500
       local RayResult = workspace.Raycast(workspace, Origin, Direction, RaycastParameters) or {
           Instance = nil;
           Position = Origin + Direction;
           Material = Enum.Material.Air;
       }
    
       if RayResult.Instance and (RayResult.Instance.IsDescendantOf(RayResult.Instance, Ancestor) or RayResult.Instance == Ancestor) then
           return true
       end
    
       -- [ Obstructed ] --
       return false
    end
    
    local function IsArmed(Player)
       for i,v in ipairs(Weapons) do
           local Tool = Player.Backpack.FindFirstChild(Player.Backpack, v) or Player.Character.FindFirstChild(Player.Character, v)
           if Tool then
               return true
           end
       end
       return false
    end
    
    local function ClosestPlayerToCursor(Distance)
       local Closest = nil
       local Position = nil
       local ShortestDistance = Distance or math.huge
    
       local MousePosition = Services.UserInputService.GetMouseLocation(Services.UserInputService)
    
       for i, v in ipairs(Services.Players.GetPlayers(Services.Players)) do
           if v ~= LocalPlayer and (v.Team ~= LocalPlayer.Team and tostring(v.Team) ~= Info.TeamWhitelist) and ValidCharacter(v.Character) then
               if Info.ArmsCheckEnabled and (v.Team == Services.Teams.Inmates and IsArmed(v) == false) then
                   continue
               end
    
               local ViewportPosition, OnScreen = Camera.WorldToViewportPoint(Camera, v.Character.PrimaryPart.Position)
               local Magnitude = (Vector2.new(ViewportPosition.X, ViewportPosition.Y) - MousePosition).Magnitude
    
               if OnScreen == false or NotObstructing(v.Character.PrimaryPart.Position, v.Character) == false then
                   continue
               end
    
               if Magnitude < ShortestDistance  then
                   Closest = v
                   Position = ViewportPosition
                   ShortestDistance = Magnitude
               end
           end
       end
    
       return Closest, Position
    end
    
    local function SwitchGuns()
       if LocalPlayer.Character.FindFirstChild(LocalPlayer.Character, "Remington 870") then
           local Tool = LocalPlayer.Backpack.FindFirstChild(LocalPlayer.Backpack, "M4A1") or LocalPlayer.Backpack.FindFirstChild(LocalPlayer.Backpack, "AK-47") or LocalPlayer.Backpack.FindFirstChild(LocalPlayer.Backpack, "M9")
    
           local Humanoid = LocalPlayer.Character.FindFirstChildWhichIsA(LocalPlayer.Character, "Humanoid")
           Humanoid.EquipTool(Humanoid, Tool)
       else
           local Tool = LocalPlayer.Backpack.FindFirstChild(LocalPlayer.Backpack, "Remington 870")
    
           local Humanoid = LocalPlayer.Character.FindFirstChildWhichIsA(LocalPlayer.Character, "Humanoid")
           Humanoid.EquipTool(Humanoid, Tool)
       end
    end
    
    local function Crash(Gun, BulletCount, ShotCount)
       local ShootEvent = Services.ReplicatedStorage.ShootEvent
       local StartTime = time()
       local BulletTable = {}
    
       for i = 1, BulletCount do
           BulletTable[i] = {
               Cframe = CFrame.new(),
               Distance = math.huge
           }
       end
       for i = 1, ShotCount do
           ShootEvent:FireServer(BulletTable, Gun)
           if time() - StartTime > 5 then
               break
           end
       end
    end
    
    -- // User Interface \\ --
    -- [ Window ] --
    local Window = UserInterface.new("Luna X", UDim2.new(0, 320, 0, 320))
    
    -- [ Assists ] --
    Window:Divider("Main Aim")
    
    Window:Toggle("Luna X Silent Aim (V1.0)", "Kill anyone inside the FOV", false, function(State)
       Info.SilentAIMEnabled = State
    end)
    
    Window:Slider("Field Of View", "Recommended: 150", 50, 500, 250, function(Value)
       Info.FieldOfView = Value
    end)
    
    Window:Dropdown("Team Whitelist", "Team for Silent-Aim to ignore.", {"Guards", "Inmates", "Criminals"}, function(Value)
       Info.TeamWhitelist = Value
    end)
    
    -- [ Rage ] --
    Window:Divider("Gun Modification")
    
    Window:Button("Modify Guns", "Gives you infinite ammo and shoots rapidly.", function()
       local GunStates = LocalPlayer.Character:FindFirstChild("GunStates", true)
       if GunStates then
           local GunInfo = require(GunStates)
           GunInfo.ReloadTime = 0
           GunInfo.FireRate = 0
           GunInfo.AutoFire = true
           GunInfo.StoredAmmo = math.huge
           GunInfo.MaxAmmo = math.huge
           GunInfo.CurrentAmmo = math.huge
       end
    end)
    
    -- [ Miscellaneous ] --
    Window:Divider("Misc")
    
    Window:Button("Grab all guns", "Gives you all the guns", function()
       local HasSWAT = Services.MarketplaceService:UserOwnsGamePassAsync(LocalPlayer.UserId, 96651)
    
       workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["Remington 870"].ITEMPICKUP)
       if HasSWAT then
           workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["M4A1"].ITEMPICKUP)
       end
       workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["AK-47"].ITEMPICKUP)
       workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.giver["M9"].ITEMPICKUP)
    
       if HasSWAT then
           workspace.Remote.ItemHandler:InvokeServer(workspace.Prison_ITEMS.clothes["Riot Police"].ITEMPICKUP)
       end
    end)
    
    -- [ Credits ] --
    Window:Divider("Credits")
    
    Window:Button("Layla & Ghxst", "Developers of Luna X", function()
       setclipboard("$ layla#0001 & Ghxst#1317")
    end)    
    
    
    
    Window:Button("JOIN THE DISCORD SERVER", "Click to copy Discord", function()
       setclipboard("https://discord.gg/QVzanYhQXJ")
    end)
    
    setreadonly(RawMetatable, false)
    
    RawMetatable.__index = newcclosure(function(Self, Index)
       if Info.SilentAIMEnabled == true and checkcaller() == false then
           if typeof(Self) == "Instance" and (Self:IsA("PlayerMouse") or Self:IsA("Mouse")) then
               if Index == "Hit" then
                   local Closest = ClosestPlayerToCursor(Info.FieldOfView)
                   if Closest then
                       local Velocity = Closest.Character.PrimaryPart.AssemblyLinearVelocity
                       local Prediction = Velocity.Unit
                       if Velocity.Magnitude == 0 then
                           Prediction = Vector3.new(0, 0, 0)
                       end
                       return CFrame.new(Closest.Character.Head.Position + Prediction)
                   end
               end
           end
       end
    
       return __Index(Self, Index)
    end)
    
    
    setreadonly(RawMetatable, true)
    
    -- // Event Listeners \\ --
    Services.RunService.RenderStepped:Connect(function()
       if Info.SilentAIMEnabled == true then
           -- FOV --
           FOVCircle.Visible = true
           FOVCircle.Radius = Info.FieldOfView
           FOVCircle.Position = Services.UserInputService:GetMouseLocation()
    
           -- Target --
           local Closest, Position = ClosestPlayerToCursor(Info.FieldOfView)
           if Closest then
               Target.PointA = Vector2.new(Position.X - 25, Position.Y + 25)
               Target.PointB = Vector2.new(Position.X + 25, Position.Y + 25)
               Target.PointC = Vector2.new(Position.X, Position.Y - 25)
               if Info.TriggeredEnabled and not Services.UserInputService:IsKeyDown(Enum.KeyCode.G) then
                   mouse1click()
               end
           end
           Target.Visible = Closest ~= nil
       else
           FOVCircle.Visible = false
           Target.Visible = false
       end
    end)
    
    LocalPlayer.Chatted:Connect(function(Message)
       if string.find(Message:lower(), "-lag") then
           local GunScript = (LocalPlayer.Backpack:FindFirstChild("GunInterface", true) or LocalPlayer.Character:FindFirstChild("GunInterface", true))
           if GunScript then
               ToolTip.update("Lagging...")
               Crash(GunScript.Parent, 100, 10)
               ToolTip.update("Lagged!")
           else
              ToolTip.update("Error: No gun found!")
           end
       end
    end)
    
    local LastShotDetected = time()
    for i,v in ipairs(getconnections(Services.ReplicatedStorage.ReplicateEvent.OnClientEvent)) do
       local OldFunction = v.Function
       v.Function = function(BulletStats, IsTaser)
           if #BulletStats > 25 or time() - LastShotDetected > 0.02 then
               ToolTip.update("Bullet Overload: Removing...")
               return
           end
           LastShotDetected = time()
           OldFunction(BulletStats, IsTaser)
       end
    end
    
    local LastSoundDetected = time()
    for i,v in ipairs(getconnections(Services.ReplicatedStorage.SoundEvent.OnClientEvent)) do
       local OldFunction = v.Function
       v.Function = function(Sound)
           if time() - LastSoundDetected > 0.02 then
               ToolTip.update("Audio Overload: Removing...")
               return
           end
           LastSoundDetected = time()
           OldFunction(Sound)
       end
    end
    
    
    -- // KeyBinds \\ --
    Services.UserInputService.InputBegan:Connect(function(Input, GameProcessed)
       if _G.ArrestAssist == false or GameProcessed or LocalPlayer.Character:FindFirstChild("Handcuffs") == nil then
           return
       end
    
       local Delta = time() - LastArrest
       if Delta <= 15 then
           ToolTip.update("Wait " .. tostring(math.floor(Delta)) .. " seconds before arresting again!")
       end
    
       if Input.UserInputType == Enum.UserInputType.MouseButton1 then
           local Closest = ClosestPlayerToCursor(_G.FOV)
           if Closest then
               local Result = workspace.Remote.arrest:InvokeServer(Closest.Character.HumanoidRootPart)
               ToolTip.update(Result == true and "Successfully arrested!" or Result)
               if Result == true then
                   LastArrest = time()
               end
           end
       end
    end)
    
    Services.ContextActionService:BindAction("Switch Bind", function(actionName, InputState, inputObject)
    if InputState == Enum.UserInputState.End then
    return
       end
       pcall(SwitchGuns)
    end, false, Enum.KeyCode.Q)
    
    -- // Actions \\ --
    LocalPlayer.PlayerGui.Home.fadeFrame.Visible = false
    
    return {};
